@model UserSkillForm;
@{
    Layout = "_Layout";

    ViewData["Title"] = "Create user skill";
    var message = ViewData["Message"] as string;
    var skills = ViewData["Skills"] as List<Skill>;
    var skillList = new SelectList(skills, "Id", "Name");
}

<div>
    <h1 class="my-header display-4">Create</h1>
    <div class="row">

        <div class="col-md-6">
            <div class="card mt-1">
                <div class="card-body">

                    <form method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Level, new {@class= "form-label"})
                            @Html.TextBoxFor(m => m.Level, new {@class = "form-control"})
                            @Html.ValidationMessageFor(m => m.Level, null, new {@class="text-danger"})
                            @if (!string.IsNullOrEmpty(message))
                            {
                                <div class="text-danger">@message</div>
                            }
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.SkillId, new {@class= "form-label"})
                            @Html.DropDownListFor(m => m.SkillId, skillList, new {@class = "form-select"})
                            @Html.ValidationMessageFor(m => m.SkillId, null, new {@class="text-danger"})
                        </div>
                        <button class="btn btn-primary" type="submit">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>